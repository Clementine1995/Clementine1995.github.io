(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{436:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js中正则断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中正则断言"}},[t._v("#")]),t._v(" JS中正则断言")]),t._v(" "),a("blockquote",[a("p",[t._v("文章参考自"),a("a",{attrs:{href:"https://juejin.im/post/5b583fede51d4516e91f9e2f",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于正则位置匹配（断言）的技巧"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"正则位置匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则位置匹配"}},[t._v("#")]),t._v(" 正则位置匹配")]),t._v(" "),a("p",[t._v("先了解下以下几个概念")]),t._v(" "),a("ul",[a("li",[t._v("零宽：只匹配位置，在匹配过程中，不占用字符，所以被称为零宽")]),t._v(" "),a("li",[t._v("先行：正则引擎在扫描字符的时候，从左往右扫描，匹配扫描指针未扫描过的字符，先于指针，故称先行")]),t._v(" "),a("li",[t._v("后行：匹配指针已扫描过的字符，后于指针到达该字符，故称后行，即产生回溯")]),t._v(" "),a("li",[t._v("正向：即匹配括号中的表达式")]),t._v(" "),a("li",[t._v("负向：不匹配括号中的表达式")])]),t._v(" "),a("blockquote",[a("p",[t._v("es5 就支持了先行断言")]),t._v(" "),a("p",[t._v("es2018 才支持后行断言")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"零宽正向先行断言，又称正向向前查找（positive-lookhead）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#零宽正向先行断言，又称正向向前查找（positive-lookhead）"}},[t._v("#")]),t._v(" 零宽正向先行断言，又称正向向前查找（positive lookhead）")]),t._v(" "),a("p",[t._v("注意: "),a("strong",[t._v("在正则里面.代表匹配除换行符，回车符等少数空白字符之外的任何字符，匹配其时需要转义。")])]),t._v(" "),a("h3",{attrs:{id:"pattern-：某位置后面紧接着的字符序列要匹配-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pattern-：某位置后面紧接着的字符序列要匹配-pattern"}},[t._v("#")]),t._v(" (?=pattern)：某位置后面紧接着的字符序列要匹配 pattern")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("sinM.")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/sin(?=M\\.)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["sin"]')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("M.sin")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/sin(?=M\\.)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("第一个 sin 会匹配，因为他后面有 pattern")]),t._v(" "),a("h2",{attrs:{id:"零宽负向先行断言，又称负向向前查找（negative-lookhead）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#零宽负向先行断言，又称负向向前查找（negative-lookhead）"}},[t._v("#")]),t._v(" 零宽负向先行断言，又称负向向前查找（negative lookhead）")]),t._v(" "),a("h3",{attrs:{id:"pattern-：某位置后面紧接着的字符序列不能匹配-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pattern-：某位置后面紧接着的字符序列不能匹配-pattern"}},[t._v("#")]),t._v(" (?!pattern)：某位置后面紧接着的字符序列不能匹配 pattern")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("M.sin")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/sin(?!M\\.)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["sin"]')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("sinM.")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/sin(?!M\\.)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("复制代码第一个 sin 会匹配，因为他后面没有 pattern")]),t._v(" "),a("h2",{attrs:{id:"零宽正向后行断言，又称正向向后查找（positive-lookbehind）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#零宽正向后行断言，又称正向向后查找（positive-lookbehind）"}},[t._v("#")]),t._v(" 零宽正向后行断言，又称正向向后查找（positive lookbehind）")]),t._v(" "),a("h3",{attrs:{id:"pattern-：某位置前面紧接着的字符序列要匹配-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pattern-：某位置前面紧接着的字符序列要匹配-pattern"}},[t._v("#")]),t._v(" (?<=pattern)：某位置前面紧接着的字符序列要匹配 pattern")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sinM.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=M\\.)sin/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M.sin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=M\\.)sin/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["sin"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("复制代码第二个 sin 会匹配，因为它前面有 pattern")]),t._v(" "),a("h2",{attrs:{id:"零宽负向后行断言，又称负向向后查找（negative-lookbehind）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#零宽负向后行断言，又称负向向后查找（negative-lookbehind）"}},[t._v("#")]),t._v(" 零宽负向后行断言，又称负向向后查找（negative lookbehind）")]),t._v(" "),a("h3",{attrs:{id:"pattern-：某位置前面紧接着的字符序列不能匹配-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pattern-：某位置前面紧接着的字符序列不能匹配-pattern"}},[t._v("#")]),t._v(" (?<!pattern)：某位置前面紧接着的字符序列不能匹配 pattern")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sinM.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<!M\\.)sin/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["sin"]')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M.sin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<!M\\.)sin/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("复制代码第一个 sin 会匹配，因为它前面没有 pattern")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("来看个实际的例子，把4+6*sqrt(5)*Math.sqrt(5)转换成可以通过eval或者new Function()获得实际结果的字符串")]),t._v(" "),a("p",[t._v("这个可以使用负向后行断言，即替换前面不紧接 Math.的 sqrt 字符串序列")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("4+6*sqrt(5)*Math.sqrt(5)")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<!Math\\.)sqrt/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Math.")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("func"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 34")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("第二个例子： 匹配 url 后面的路径")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://www.google.com/v3/api/getUser?user=panghu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=\\.\\w*(?=\\/)).*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("第三个例子：替换字符串中 img 标签的 width 为 100%")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<img id = "23" style="width:999x;"/><img id = "23" style="width:999x;"/>\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v('/(?<=(<img[\\s\\S]*width:\\s*))[^("\\/);]*/gm')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100%'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("匹配 sin")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'M.sin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=M\\.)sin/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["sin"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("M.sin")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/sin(?!M\\.)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["sin"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("这两种方法都可以实现同样的效果，但我个人更喜欢使用第一种方法，它的写法更符合人的直接思维习惯")]),t._v(" "),a("h2",{attrs:{id:"在全局匹配修饰符-g-作用下正则-test-方法出现的-怪异-结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在全局匹配修饰符-g-作用下正则-test-方法出现的-怪异-结果"}},[t._v("#")]),t._v(" 在全局匹配修饰符 g 作用下正则 test 方法出现的“怪异”结果")]),t._v(" "),a("p",[t._v("先看下面两行代码的运行结果")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/js/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//before: lastIndex:0, after: lastIndex:2")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//before: lastIndex:2, after: lastIndex:0")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//before: lastIndex:0, after: lastIndex:2")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("如果你的答案是三个 true 的话，那就错了，答案其实是 true、false、true，这就是所谓的怪异现象")]),t._v(" "),a("p",[t._v("为什么？答：egExp 对象有个 lastIndex 属性，它的初始值是 0，当不使用 g 修饰符修饰时，每次执行 test 方法之后它都会自动置 0而使用 g 修饰符时，每次执行 test 方法的时候，它都是从索引值为 lastIndex 的位置开始匹配，lastIndex 为匹配到的字符序列下一个索引值。只有当匹配失败以后才会将 lastIndex 置为 0")]),t._v(" "),a("p",[t._v("例：上述例子中的第一个 test 方法执行之前，lastIndex 值为 0，执行之后 lastIndex 值为 2，于是当第二次执行 test 方法时，从字符串索引值为 2 处开始匹配，显然会匹配失败，所以第三次匹配时又会匹配成功")]),t._v(" "),a("h3",{attrs:{id:"匹配含-class-为-root-的标签-不考虑特殊情况-如-div-class-root"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配含-class-为-root-的标签-不考虑特殊情况-如-div-class-root"}},[t._v("#")]),t._v(" 匹配含 class 为 root 的标签(不考虑特殊情况), 如"),a("code",[t._v('<div class="root">')])]),t._v(" "),a("p",[t._v("这里可以涉及到的知识点有："),a("strong",[t._v("贪婪/非贪婪匹配，模式匹配，回溯及其消除，分组，反向引用")])]),t._v(" "),a("h4",{attrs:{id:"基础版：只匹配双引号包裹的-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础版：只匹配双引号包裹的-class"}},[t._v("#")]),t._v(" 基础版：只匹配双引号包裹的 class")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('<div class="root"><span class="root"></span><i class=\'root\'></i></div>')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v('/<[^>]*class="root".*?>/g')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["<div class="root">", "<span class="root">"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("模式匹配[^>]表示匹配除[^]里面的所有字符，这里就是匹配除>外的所有字符\n注意前后都需要非贪婪匹配符号？否则只有前面的，它会贪婪的吃掉 div；只有后面的，它会贪婪的吃掉 span")]),t._v(" "),a("h4",{attrs:{id:"完整版：单双引号包裹的-class-都可以匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整版：单双引号包裹的-class-都可以匹配"}},[t._v("#")]),t._v(" 完整版：单双引号包裹的 class 都可以匹配")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('<div class="root"><span class="root"></span><i class=\'root\'></i></div>')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<[^>]*class=(\"root\"|'root').*?>/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["<div class="root">", "<span class="root">", "<i class=\'root\'>"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("这里如果不使用"),a("code",[t._v("[^>]")]),t._v("而使用"),a("code",[t._v(".*")]),t._v("就会出现下面这种匹配结果，不是我们想要的")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<div class="')]),t._v("root"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('">"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<span class="')]),t._v("root"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('">"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"</span><i class='root'>\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"进阶版：使用分组引用消除难看的-root-root-，再消除-回溯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶版：使用分组引用消除难看的-root-root-，再消除-回溯"}},[t._v("#")]),t._v(" 进阶版：使用分组引用消除难看的(\"root\"|'root')，再消除.*?回溯")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('<div class="root"><span class="root"></span><i class=\'root\'></i></div>')]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/<[^>]*class=(\"|')root\\1[^>]*>/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["<div class="root">", "<span class="root">", "<i class=\'root\'>"]')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("code",[t._v("\\1")]),t._v("表示引用前面的第一个分组结果，即"),a("code",[t._v("(\"|')")]),t._v("的匹配结果，这样就能保证单引号配对单引号，双引号匹配双引号")]),t._v(" "),a("p",[a("code",[t._v("[^>]*")]),t._v("代替"),a("code",[t._v(".*?")]),t._v("可以消除使用"),a("code",[t._v("*?")]),t._v("引发的回溯，因为"),a("code",[t._v("*")]),t._v("是尽可能多的匹配，而"),a("code",[t._v("?")]),t._v("是尽可能少的匹配")]),t._v(" "),a("p",[t._v("回顾开头，我所说的特殊情况就是标签的属性值不能含有"),a("code",[t._v(">")]),t._v("，因为为了消除回溯使用的"),a("code",[t._v("[^>]")]),t._v("含有字符>，这部分其实可以使用其他正则代替，让它在消除回溯的情况下可以匹配特殊情况")])])}),[],!1,null,null,null);s.default=e.exports}}]);