(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{380:function(t,a,s){"use strict";s.r(a);var v=s(42),e=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"xxs相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xxs相关"}},[t._v("#")]),t._v(" XXS相关")]),t._v(" "),s("p",[t._v("XSS是Crossing-Site Scripting（跨站脚本）简写，它是一种代码注入攻击，攻击者可以往 Web 页面里插入恶意代码，当其他用户浏览该网页的时候，嵌入web里面的代码会被执行，从而达到攻击者特殊目的。目的可以有多种，比如：破坏网站，导致页面不可用，攻击服务端，导致服务拒绝，窃取用户cookie，发送恶意请求，安装键盘记录器，窃取用户数据，跳转钓鱼页面，窃取账号密码等等。")]),t._v(" "),s("p",[t._v("XSS触发的条件包括：")]),t._v(" "),s("ol",[s("li",[t._v("攻击者可以提交恶意数据")]),t._v(" "),s("li",[t._v("数据没有被处理，直接展示到页面上（标签、标签属性、标签事件）")]),t._v(" "),s("li",[t._v("其他用户可以访问该页面")])]),t._v(" "),s("h2",{attrs:{id:"xxs的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xxs的分类"}},[t._v("#")]),t._v(" XXS的分类")]),t._v(" "),s("p",[t._v("反射型、存储型、Dom Based型")]),t._v(" "),s("h3",{attrs:{id:"反射型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射型"}},[t._v("#")]),t._v(" 反射型")]),t._v(" "),s("p",[t._v("典型步骤")]),t._v(" "),s("ol",[s("li",[t._v("攻击者构造出包含恶意代码的特殊的URL")]),t._v(" "),s("li",[t._v("用户登陆后，访问带有恶意代码的URL")]),t._v(" "),s("li",[t._v("服务端取出URL上的恶意代码，拼接在HTML中返回浏览器")]),t._v(" "),s("li",[t._v("用户浏览器收到响应后解析执行混入其中的恶意代码\n5.窃取敏感信息/冒充用户行为，完成XSS攻击")])]),t._v(" "),s("p",[t._v("常见场景")]),t._v(" "),s("p",[t._v("通过 URL 传递参数的功能，如网站搜索、跳转等")]),t._v(" "),s("p",[t._v("区别/特点")]),t._v(" "),s("ol",[s("li",[t._v("非持久型xss攻击，依赖于服务器对恶意请求的反射，仅对当次的页面访问产生影响")]),t._v(" "),s("li",[t._v("恶意代码存在URL上")]),t._v(" "),s("li",[t._v("经过后端，不经过数据库")])]),t._v(" "),s("h3",{attrs:{id:"存储型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储型"}},[t._v("#")]),t._v(" 存储型")]),t._v(" "),s("p",[t._v("典型步骤")]),t._v(" "),s("ol",[s("li",[t._v("攻击者将恶意代码提交到目标网站的数据库中")]),t._v(" "),s("li",[t._v("用户登陆后，访问相关页面URL")]),t._v(" "),s("li",[t._v("服务端从数据库中取出恶意代码，拼接在HTML中返回浏览器")]),t._v(" "),s("li",[t._v("用户浏览器收到响应后解析执行混入其中的恶意代码")]),t._v(" "),s("li",[t._v("窃取敏感信息/冒充用户行为，完成XSS攻击")])]),t._v(" "),s("p",[t._v("常见场景")]),t._v(" "),s("p",[t._v("带有用户保存数据的网站功能，比如论坛发帖、商品评价、用户私信等等。")]),t._v(" "),s("p",[t._v("区别/特点")]),t._v(" "),s("ol",[s("li",[t._v("持久型xss，攻击者的数据会存储在服务端，攻击行为将伴随着攻击数据一直存在。")]),t._v(" "),s("li",[t._v("恶意代码存在数据库")]),t._v(" "),s("li",[t._v("经过后端，经过数据库")])]),t._v(" "),s("h3",{attrs:{id:"dom型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom型"}},[t._v("#")]),t._v(" DOM型")]),t._v(" "),s("p",[t._v("典型步骤")]),t._v(" "),s("ol",[s("li",[t._v("前端 JavaScript 取出 URL中的恶意代码并执行")]),t._v(" "),s("li",[t._v("窃取敏感信息/冒充用户行为，完成XSS攻击")])]),t._v(" "),s("p",[t._v("常见场景")]),t._v(" "),s("p",[t._v("页面JS获取数据后不做甄别，直接操作DOM。一般见于从URL、cookie、LocalStorage中取内容的场景")]),t._v(" "),s("p",[t._v("区别/特点")]),t._v(" "),s("ol",[s("li",[t._v("取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞")])]),t._v(" "),s("h2",{attrs:{id:"如何防御"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何防御"}},[t._v("#")]),t._v(" 如何防御")]),t._v(" "),s("h3",{attrs:{id:"针对反射和存储型xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#针对反射和存储型xss"}},[t._v("#")]),t._v(" 针对反射和存储型XSS")]),t._v(" "),s("p",[t._v("存储型和反射型 XSS 都是在后端取出恶意代码后，插入到响应 HTML 里的，预防这种漏洞主要是关注后端的处理。")]),t._v(" "),s("h4",{attrs:{id:"后端设置白名单，净化数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端设置白名单，净化数据"}},[t._v("#")]),t._v(" 后端设置白名单，净化数据")]),t._v(" "),s("p",[t._v("后端对于保存/输出的数据要进行过滤和转义，过滤的内容：比如location、onclick、onerror、onload、onmouseover 、  script 、href 、 eval、setTimeout、setInterval等，常见框架：bluemonday，jsoup等")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("String unsafe "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"<p><a href='http://example.com/' onclick='stealCookies()'>Link</a></p>\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nString safe "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Jsoup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Whitelist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("basic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// now: <p><a href="http://example.com/" >Link</a></p>')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h4",{attrs:{id:"避免拼接-html，采用纯前端渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#避免拼接-html，采用纯前端渲染"}},[t._v("#")]),t._v(" 避免拼接 HTML，采用纯前端渲染")]),t._v(" "),s("p",[t._v("浏览器先加载一个静态 HTML，后续通过 Ajax 加载业务数据，调用 DOM API 更新到页面上。纯前端渲染还需注意避免 DOM 型 XSS 漏洞")]),t._v(" "),s("h3",{attrs:{id:"针对dom型xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#针对dom型xss"}},[t._v("#")]),t._v(" 针对DOM型XSS")]),t._v(" "),s("p",[t._v("DOM 型 XSS 攻击，实际上就是网站前端 JavaScript 代码本身不够严谨，把不可信的数据当作代码执行了。")]),t._v(" "),s("h4",{attrs:{id:"谨慎对待展示数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谨慎对待展示数据"}},[t._v("#")]),t._v(" 谨慎对待展示数据")]),t._v(" "),s("p",[t._v("谨慎使用.innerHTML、.outerHTML、document.write() ，不要把不可信的数据作为 HTML 插到页面上。\nDOM 中的内联事件监听器，如 location、onclick、onerror、onload、onmouseover 等，"),s("code",[t._v("<a>")]),t._v(" 标签的 href 属性，JavaScript 的 eval()、setTimeout()、setInterval() 等，都能把字符串作为代码运行，很容易产生安全隐患，谨慎处理传递给这些 API的字符串。")]),t._v(" "),s("h4",{attrs:{id:"数据充分转义，过滤恶意代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据充分转义，过滤恶意代码"}},[t._v("#")]),t._v(" 数据充分转义，过滤恶意代码")]),t._v(" "),s("p",[t._v("可以使用一些插件 xss.js，DOMPurify")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("放置位置")]),t._v(" "),s("th",[t._v("例子")]),t._v(" "),s("th",[t._v("采取的编码")]),t._v(" "),s("th",[t._v("编码格式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("HTML标签之间")]),t._v(" "),s("td",[s("code",[t._v("<div> 不可信数据 </div>")])]),t._v(" "),s("td",[t._v("HTML Entity编码")]),t._v(" "),s("td",[t._v("& –> & < –> < > –> > ” –> \" ‘ –> ' / –> /")])]),t._v(" "),s("tr",[s("td",[t._v("HTML标签的属性")]),t._v(" "),s("td",[s("code",[t._v("<input type=”text”value=” 不可信数据 ” />")])]),t._v(" "),s("td",[t._v("HTML Attribute编码")]),t._v(" "),s("td",[t._v("&#xHH")])]),t._v(" "),s("tr",[s("td",[t._v("JavaScript")]),t._v(" "),s("td",[s("code",[t._v("<script> var msg = ” 不可信数据 ” <\/script>")])]),t._v(" "),s("td",[t._v("JavaScript编码")]),t._v(" "),s("td",[t._v("\\xHH")])]),t._v(" "),s("tr",[s("td",[t._v("CSS")]),t._v(" "),s("td",[s("code",[t._v("<div style=” width: 不可信数据 ” > … </div>")])]),t._v(" "),s("td",[t._v("CSS编码")]),t._v(" "),s("td",[t._v("\\HH")])]),t._v(" "),s("tr",[s("td",[t._v("URL参数中")]),t._v(" "),s("td",[s("code",[t._v("<a href=”/page?p= 不可信数据 ” >…</a>")])]),t._v(" "),s("td",[t._v("URL编码")]),t._v(" "),s("td",[t._v("%HH")])])])]),t._v(" "),s("p",[t._v("编码规则：除了阿拉伯数字和字母，对其他所有的字符进行编码，只要该字符的ASCII码小于256。编码后输出的格式为以上编码格式 （以&#x、\\x 、\\、%开头，HH则是指该字符对应的十六进制数字）")]),t._v(" "),s("h4",{attrs:{id:"使用插值表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用插值表达式"}},[t._v("#")]),t._v(" 使用插值表达式")]),t._v(" "),s("p",[t._v("采用vue/react/angular等技术栈时，使用插值表达式，避免使用v-html。因为template转成render function的过程中，会把插值表达式作为Text文本内容进行渲染。在前端 render 阶段避免 innerHTML、outerHTML 的 XSS 隐患。")]),t._v(" "),s("p",[t._v("比如：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{item}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("最终生成的代码如下")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"with(this){return _c('div',{staticClass:\"")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"},[_c('span',[_v(_s(item))])])}\"")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("_c 是 createElement 简写，即 render 函数，_v 是 createTextVNode 的简写，创建文本节点，_s 是 toString 简写")]),t._v(" "),s("h3",{attrs:{id:"其他措施"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他措施"}},[t._v("#")]),t._v(" 其他措施")]),t._v(" "),s("ul",[s("li",[t._v("设置Cookie httpOnly")])]),t._v(" "),s("p",[t._v("禁止 JavaScript 读取某些敏感 Cookie，攻击者完成 XSS 注入后也无法窃取此 Cookie")]),t._v(" "),s("ul",[s("li",[t._v("设置CSP（Content Security Policy）")])]),t._v(" "),s("p",[t._v("CSP 的实质就是设置浏览器白名单，告诉浏览器哪些外部资源可以加载和执行，自动禁止外部注入恶意脚本。")]),t._v(" "),s("p",[t._v("CSP可以通过两种方式来开启 ：")]),t._v(" "),s("p",[t._v("1.设置html的 meta 标签的方式")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Content-Security-Policy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script-src 'self' *.baidu.com ; style-src 'self' ;"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("2.设置 HTTP Header 中的 Content-Security-Policy")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("  Content-Security-Policy: script-src 'self' *.baidu.com ; style-src 'self' ;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("上述代码描述的CSP规则是js脚本只能来自当前域名和baidu.com二级域名下，css只能来自当前域名")]),t._v(" "),s("p",[t._v("CSP可以限制加载资源的类型：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("key")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("script-src")]),t._v(" "),s("td",[t._v("外部脚本")])]),t._v(" "),s("tr",[s("td",[t._v("style-src")]),t._v(" "),s("td",[t._v("样式表")])]),t._v(" "),s("tr",[s("td",[t._v("img-src")]),t._v(" "),s("td",[t._v("图像")])]),t._v(" "),s("tr",[s("td",[t._v("media-src")]),t._v(" "),s("td",[t._v("媒体文件（音频和视频）")])]),t._v(" "),s("tr",[s("td",[t._v("font-src")]),t._v(" "),s("td",[t._v("字体文件")])]),t._v(" "),s("tr",[s("td",[t._v("object-src")]),t._v(" "),s("td",[t._v("插件（比如 Flash）")])]),t._v(" "),s("tr",[s("td",[t._v("child-src")]),t._v(" "),s("td",[t._v("框架")])]),t._v(" "),s("tr",[s("td",[t._v("frame-ancestors")]),t._v(" "),s("td",[t._v("嵌入的外部资源（比如"),s("code",[t._v("<frame>、<iframe>、<embed>和<applet>")]),t._v("）")])]),t._v(" "),s("tr",[s("td",[t._v("connect-src")]),t._v(" "),s("td",[t._v("HTTP 连接（通过 XHR、WebSockets、EventSource等）worker-srcworker脚本")])]),t._v(" "),s("tr",[s("td",[t._v("manifest-src")]),t._v(" "),s("td",[t._v("manifest 文件")])]),t._v(" "),s("tr",[s("td",[t._v("default-src")]),t._v(" "),s("td",[t._v("用来设置上面各个选项的默认值")])])])]),t._v(" "),s("p",[t._v("同时也可设置资源的限制规则")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("可选值")]),t._v(" "),s("th",[t._v("例子")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("主机名")]),t._v(" "),s("td",[t._v("example.org，"),s("code",[t._v("https://example.com:443")])])]),t._v(" "),s("tr",[s("td",[t._v("路径名")]),t._v(" "),s("td",[t._v("example.org/resources/js/")])]),t._v(" "),s("tr",[s("td",[t._v("通配符")]),t._v(" "),s("td",[s("em",[t._v(".example.org，")]),t._v("😕/"),s("em",[t._v(".example.com:")]),t._v("（表示任意协议、任意子域名、任意端口）")])]),t._v(" "),s("tr",[s("td",[t._v("协议名")]),t._v(" "),s("td",[t._v("https:、data:")])]),t._v(" "),s("tr",[s("td",[t._v("'self'")]),t._v(" "),s("td",[t._v("当前域名，需要加引号")])]),t._v(" "),s("tr",[s("td",[t._v("'none'")]),t._v(" "),s("td",[t._v("禁止加载任何外部资源，需要加引号")])]),t._v(" "),s("tr",[s("td",[t._v("'unsafe-inline'")]),t._v(" "),s("td",[t._v("允许执行页面内嵌的"),s("code",[t._v("<script>")]),t._v("标签和事件监听函数")])]),t._v(" "),s("tr",[s("td",[t._v("'unsafe-eval'")]),t._v(" "),s("td",[t._v("允许将字符串当作代码执行，比如使用eval、setTimeout、setInterval和Function等函数")])])])]),t._v(" "),s("p",[t._v("严格的 CSP 在 XSS 的防范中可以起到以下的作用：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("禁止加载外域代码，防止复杂的攻击逻辑")])]),t._v(" "),s("li",[s("p",[t._v("禁止外域提交，网站被攻击后，用户的数据不会泄露到外域")])]),t._v(" "),s("li",[s("p",[t._v("禁止内联脚本执行")])]),t._v(" "),s("li",[s("p",[t._v("禁止未授权的脚本执行")])]),t._v(" "),s("li",[s("p",[t._v("输入内容长度、类型的控制")])])]),t._v(" "),s("p",[t._v("对于不受信任的输入，都应该限定一个合理的长度，并且对输入内容的合法性进行校验（例如输入email的文本框只允许输入格式正确的email，输入手机号码的文本框只允许填入数字且格式需要正确）。虽然无法完全防止 XSS 发生，但可以增加 XSS 攻击的难度。")]),t._v(" "),s("ul",[s("li",[t._v("验证码，防止脚本冒充用户提交危险操作")])]),t._v(" "),s("h2",{attrs:{id:"如何检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何检测"}},[t._v("#")]),t._v(" 如何检测")]),t._v(" "),s("ul",[s("li",[t._v("使用通用 XSS 攻击字符串手动检测 XSS 漏洞")])]),t._v(" "),s("p",[t._v("引用自"),s("a",{attrs:{href:"https://github.com/0xsobky/HackVault/wiki/Unleashing-an-Ultimate-XSS-Polyglot",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unleashing an Ultimate XSS Polyglot"),s("OutboundLink")],1),t._v("，只要在网站的各输入框中提交这个字符串，或者把它拼接到 URL 参数上，就可以进行检测了。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("jaVasCript"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*-/*`/*\\`/*'/*\"/**/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* */")]),t._v("oNcliCk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/<\/scRipt/--!>\\x3csVg/<sVg/oNloAd=alert()//>\\x3e")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("使用扫描工具自动检测 XSS 漏洞（BeEF、w3af 、 noXss等）")])])])}),[],!1,null,null,null);a.default=e.exports}}]);